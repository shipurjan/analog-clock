:root {
    --wall-bg-color: #6b6b6b;
    --clock-bg-color: #ffffff;
    --clock-fg-color: #000000;
    --clock-hands-seconds-color: #ff0000;
    --clock-hands-minutes-color: #000000;
    --clock-hands-hours-color: #000000;


    --clock-hands-initial-rotation-seconds: -30deg;
    --clock-hands-initial-rotation-minutes: 0deg;
    --clock-hands-initial-rotation-hours: 30deg;
}

body,
html {
    padding: 0;
    margin: 0;
    width: 100%;
    height: 100%;
}

html {
    background-color: var(--wall-bg-color);
    color: white;
    font-size: min(8vw, 8vh);
    font-family: Arial, Helvetica, sans-serif;
}

body {
    display: flex;
    user-select: none;
}

wall {
    display: flex;
    margin: auto auto;
    background-color: transparent;
    width: min(100vw, 100vh);
    height: min(100vw, 100vh);
}

options {
    position: absolute;
}

controls {
    font-size: 12pt;
    display: flex;
    flex-direction: column;
    visibility: hidden;
    z-index: -999;
    position: absolute;
    background-color: var(--clock-bg-color);
    color: var(--clock-fg-color);
    padding: 2vh 8vw;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    border: 5px solid var(--clock-fg-color);
    width: fit-content;
    max-width: 75vw;
    height: 75vh;
    overflow-y: scroll;
    border-radius: 2%;
    align-items: center;
    justify-content: center;
    vertical-align: middle;
}

controls.shown {
    visibility: visible;
    z-index: 999;
}

close {
    position: absolute;
    top: 5%;
    right: 5%;
}

close::before {
    content: "X";
    display: flex;
    width: 30px;
    height: 30px;
    border-radius: 50%;
    border: 5px solid var(--clock-fg-color);
    align-items: center;
    justify-content: center;
}

close:hover::before {
    background-color: var(--clock-fg-color);
    color: var(--clock-bg-color);
}

controls label {
    margin-bottom: 1em;
    display: block;
}

controls input {
    display: block;
}

hamburger {
    display: grid;
    position: absolute;
    grid-template-rows: repeat(3, 1fr);
    grid-template-columns: 1fr;
    row-gap: min(1vw, 1vh);
    margin: min(1vw, 1vh);
    padding: min(1vw, 1vh);
    width: min(4vw, 4vh);
    height: min(4vw, 4vh);
    border-radius: 25%;
    background-color: var(--clock-bg-color);
    opacity: 0.5;
    overflow: hidden;
    z-index: 1;
}

hamburger:hover {
    opacity: 0.75;
}

hamburger:active {
    opacity: 1;
}

hamburger div {
    background-color: var(--clock-fg-color);
}

face {
    display: block;
    width: 100%;
    height: 100%;
    box-sizing: border-box;
    background-color: var(--clock-bg-color);
    border: min(2vw, 2vh) solid var(--clock-fg-color);
    border-radius: 50%;
}

centre {
    display: block;
    position: relative;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    margin-bottom: -3.5%;
    width: 3.5%;
    height: 3.5%;
    background-color: var(--clock-fg-color);
    border-radius: 50%;
    z-index: 5;
}

marks,
hands {
    display: block;
    position: relative;
    width: 100%;
    height: 100%;
    overflow: hidden;
}

hands {
    margin-top: -100%;
}

marks mark,
hands hand {
    display: block;
    width: 100%;
    height: 100%;
    background-color: transparent;
    text-align: center;
    color: var(--clock-fg-color);
    margin-bottom: -100%;
}

marks mark.mark1 {
    transform: rotate(30deg);
}

marks mark.mark2 {
    transform: rotate(60deg);
}

marks mark.mark3 {
    transform: rotate(90deg);
}

marks mark.mark3 hour {
    display: block;
    transform: rotate(-90deg);
}

marks mark.mark4 {
    transform: rotate(120deg);
}

marks mark.mark5 {
    transform: rotate(150deg);
}

marks mark.mark6 hour {
    display: block;
    transform: rotate(-180deg);
}

marks mark.mark6 {
    transform: rotate(180deg);
}

marks mark.mark7 {
    transform: rotate(210deg);
}

marks mark.mark8 {
    transform: rotate(240deg);
}

marks mark.mark9 {
    transform: rotate(270deg);
}

marks mark.mark9 hour {
    display: block;
    transform: rotate(-270deg);
}

marks mark.mark10 {
    transform: rotate(300deg);
}

marks mark.mark11 {
    transform: rotate(330deg);
}

marks mark.mark12 {
    transform: rotate(0deg);
}

marks mark::before,
hands hand::before {
    content: "";
    text-align: center;
    position: relative;
    left: 50%;
    transform: translate(-50%);
    display: block;
}

marks mark::before {
    background-color: var(--clock-fg-color);
    width: 1%;
    height: 5%;
}

hands hand::before {
    width: 1%;
    height: 50%;
    border-radius: 50%;
}

hands hand#seconds::before {
    width: 0.5%;
    top: 6%;
    height: 59%;
    background-color: var(--clock-hands-seconds-color);
}

@keyframes spin-seconds {
    0% {
        transform: rotate(var(--clock-hands-initial-rotation-seconds));
    }

    100% {
        transform: rotate(calc(360deg + var(--clock-hands-initial-rotation-seconds)));
    }
}

@keyframes spin-minutes {
    0% {
        transform: rotate(var(--clock-hands-initial-rotation-minutes));
    }

    100% {
        transform: rotate(calc(360deg + var(--clock-hands-initial-rotation-minutes)));
    }
}

@keyframes spin-hours {
    0% {
        transform: rotate(var(--clock-hands-initial-rotation-hours));
    }

    100% {
        transform: rotate(calc(360deg + var(--clock-hands-initial-rotation-hours)));
    }
}

hands hand#minutes::before {
    width: 1%;
    top: 10%;
    height: 50%;
    background-color: var(--clock-hands-minutes-color);
}

hands hand#hours::before {
    width: 2%;
    top: 18%;
    height: 39%;
    background-color: var(--clock-hands-hours-color);
}

hands hand#seconds {
    transform: rotate(-30deg);

}

hands hand#seconds.calculated {
    transform: rotate(var(--clock-hands-initial-rotation-seconds));

}

hands hand#seconds.animation {
    animation-name: spin-seconds;
    animation-duration: 60s;
    animation-timing-function: linear;
    animation-iteration-count: infinite;
}

hands hand#minutes {
    transform: rotate(0deg);

}

hands hand#minutes.calculated {
    transform: rotate(var(--clock-hands-initial-rotation-minutes));

}

hands hand#minutes.animation {
    animation-name: spin-minutes;
    animation-duration: 3600s;
    animation-timing-function: linear;
    animation-iteration-count: infinite;
}

hands hand#hours {
    transform: rotate(30deg);

}

hands hand#hours.calculated {
    transform: rotate(var(--clock-hands-initial-rotation-hours));

}

hands hand#hours.animation {
    animation-name: spin-hours;
    animation-duration: 43200s;
    animation-timing-function: linear;
    animation-iteration-count: infinite;
}